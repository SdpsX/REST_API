Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/.idea/.gitignore	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.name b/.idea/.name
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/.idea/.name	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,1 @@
+main.py
\ No newline at end of file
Index: .idea/REST APRI.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/REST APRI.iml b/.idea/REST APRI.iml
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/.idea/REST APRI.iml	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="jdk" jdkName="Python 3.9" jdkType="Python SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/.idea/inspectionProfiles/profiles_settings.xml	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/.idea/misc.xml	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/.idea/modules.xml	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/REST APRI.iml" filepath="$PROJECT_DIR$/.idea/REST APRI.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: app/api/categories.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/api/categories.py b/app/api/categories.py
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/api/categories.py	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,11 @@
+from fastapi import APIRouter, Depends
+from sqlalchemy.orm import Session
+from app import models, schemas
+from app.db import get_db
+
+router = APIRouter()
+
+@router.get("/categories/", response_model=list[schemas.Category])
+def read_categories(db: Session = Depends(get_db)):
+    categories = db.query(models.Category).all()
+    return categories
\ No newline at end of file
Index: app/api/products.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/api/products.py b/app/api/products.py
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/api/products.py	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,26 @@
+from fastapi import APIRouter, Depends, HTTPException
+from sqlalchemy.orm import Session
+from app import models, schemas
+from app.db import get_db
+
+router = APIRouter()
+
+@router.post("/products/", response_model=schemas.Product)
+def create_product(product: schemas.ProductCreate, db: Session = Depends(get_db)):
+    db_product = models.Product(**product.dict())
+    db.add(db_product)
+    db.commit()
+    db.refresh(db_product)
+    return db_product
+
+@router.get("/products/{product_id}", response_model=schemas.Product)
+def read_product(product_id: int, db: Session = Depends(get_db)):
+    db_product = db.query(models.Product).filter(models.Product.id == product_id).first()
+    if db_product is None:
+        raise HTTPException(status_code=404, detail="Product not found")
+    return db_product
+
+@router.get("/products/", response_model=list[schemas.Product])
+def read_products(skip: int = 0, limit: int = 10, db: Session = Depends(get_db)):
+    products = db.query(models.Product).offset(skip).limit(limit).all()
+    return products
\ No newline at end of file
Index: app/db.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/db.py b/app/db.py
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/db.py	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,17 @@
+from sqlalchemy import create_engine
+from sqlalchemy.ext.declarative import declarative_base
+from sqlalchemy.orm import sessionmaker
+
+SQLALCHEMY_DATABASE_URL = "mysql+pymysql://user:password@db/marketplace"
+
+engine = create_engine(SQLALCHEMY_DATABASE_URL)
+SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
+Base = declarative_base()
+
+# Dependency для получения сессии базы данных
+def get_db():
+    db = SessionLocal()
+    try:
+        yield db
+    finally:
+        db.close()
\ No newline at end of file
Index: app/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/main.py b/app/main.py
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/main.py	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,11 @@
+from fastapi import FastAPI
+from app.api import products, categories
+from app.db import Base, engine
+
+app = FastAPI()
+
+# Создаем таблицы в базе данных
+Base.metadata.create_all(bind=engine)
+
+app.include_router(products.router)
+app.include_router(categories.router)
\ No newline at end of file
Index: app/models/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/models/.idea/.gitignore b/app/models/.idea/.gitignore
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/models/.idea/.gitignore	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: app/models/.idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/models/.idea/.name b/app/models/.idea/.name
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/models/.idea/.name	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,1 @@
+product.py
\ No newline at end of file
Index: app/models/.idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/models/.idea/inspectionProfiles/profiles_settings.xml b/app/models/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/models/.idea/inspectionProfiles/profiles_settings.xml	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: app/models/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/models/.idea/misc.xml b/app/models/.idea/misc.xml
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/models/.idea/misc.xml	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: app/models/.idea/models.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/models/.idea/models.iml b/app/models/.idea/models.iml
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/models/.idea/models.iml	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="jdk" jdkName="Python 3.9" jdkType="Python SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: app/models/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/models/.idea/modules.xml b/app/models/.idea/modules.xml
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/models/.idea/modules.xml	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/models.iml" filepath="$PROJECT_DIR$/.idea/models.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: app/models/category.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/models/category.py b/app/models/category.py
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/models/category.py	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,11 @@
+from sqlalchemy import Column, Integer, String
+from sqlalchemy.orm import relationship
+from app.db import Base
+
+class Category(Base):
+    __tablename__ = "categories"
+
+    id = Column(Integer, primary_key=True, index=True)
+    name = Column(String(255), unique=True)
+
+    products = relationship("Product", back_populates="category")
\ No newline at end of file
Index: app/models/product.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/models/product.py b/app/models/product.py
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/models/product.py	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,14 @@
+from sqlalchemy import Column, Integer, String, Float, ForeignKey
+from sqlalchemy.orm import relationship
+from app.db import Base
+
+class Product(Base):
+    __tablename__ = "products"
+
+    id = Column(Integer, primary_key=True, index=True)
+    name = Column(String(255), index=True)
+    price = Column(Float)
+    description = Column(String(255))
+    category_id = Column(Integer, ForeignKey("categories.id"))
+
+    category = relationship("Category", back_populates="products")
\ No newline at end of file
Index: app/schemas/category.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/schemas/category.py b/app/schemas/category.py
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/schemas/category.py	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,8 @@
+from pydantic import BaseModel
+
+class Category(BaseModel):
+    id: int
+    name: str
+
+    class Config:
+        orm_mode = True
\ No newline at end of file
Index: app/schemas/product.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/schemas/product.py b/app/schemas/product.py
new file mode 100644
--- /dev/null	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
+++ b/app/schemas/product.py	(revision bc578daaf74492e14bd32031aff19a4ff5dcc98c)
@@ -0,0 +1,19 @@
+from pydantic import BaseModel
+
+class ProductBase(BaseModel):
+    name: str
+    price: float
+    description: str
+    category_id: int
+
+class ProductCreate(ProductBase):
+    pass
+
+class ProductUpdate(ProductBase):
+    pass
+
+class Product(ProductBase):
+    id: int
+
+    class Config:
+        orm_mode = True
\ No newline at end of file
